name: Trigger-Rules-POC-Build

on:
  workflow_dispatch:
  push:
    branches:
      - tina/Content_Azure_Deployment-Categories

jobs:
  trigger-deploy:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'SSWConsulting'

    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.POC_APP_ID }}
          private-key: ${{ secrets.POC_APP_PRIVATE_KEY }}
          owner: SSWConsulting
          repositories: SSW.Rules.Tina.Nextjs.POC

      - name: Checkout content repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build rule-category mapping
        working-directory: scripts/tina-migration
        run: python build-rule-category-map.py

      - name: Checkout POC repo
        uses: actions/checkout@v4
        with:
          repository: SSWConsulting/SSW.Rules.Tina.Nextjs.POC
          token: ${{ steps.generate-token.outputs.token }}
          path: poc
          fetch-depth: 0

      - name: Find latest release branch or fallback to main
        id: find_branch
        working-directory: poc
        run: |
          # BRANCH=$(git branch -r | grep 'origin/release/' | sed 's|origin/||' | sort -V | tail -n1)
          BRANCH=POC_Azure_Deployment-Categories
          if [ -z "$BRANCH" ]; then
            BRANCH="main"
          fi
          echo "branch_name=$BRANCH" >> $GITHUB_OUTPUT

      - name: Checkout target branch
        working-directory: poc
        run: git checkout ${{ steps.find_branch.outputs.branch_name }}

      - name: Copy mapping into POC repo
        run: cp scripts/tina-migration/rule-category-mapping.json \
             poc/rule-category-mapping.json

      - name: Commit rule-category mapping
        working-directory: poc
        env:
          BRANCH_NAME: ${{ steps.find_branch.outputs.branch_name }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add scripts/rule-category-mapping.json
          if ! git diff --cached --quiet; then
          git commit -m "chore: update rule-category-mapping.json [skip ci]"
            git push origin "$BRANCH_NAME"
          else
            echo "No changes to commit."
          fi

      - name: Trigger Tina POC deploy
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build-and-deploy.yml
          repo: SSWConsulting/SSW.Rules.Tina.Nextjs.POC
          ref: ${{ steps.find_branch.outputs.branch_name }}
          token: ${{ steps.generate-token.outputs.token }}
